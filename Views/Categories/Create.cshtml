@using Microsoft.AspNetCore.Identity;

@using Blog.Enums;
@using Blog.Services.Interfaces;

@model Blog.Models.Category

@inject UserManager<BlogUser> UserManager
@inject IImageService         ImageService

@{
  var blogUser = User.Identity!.IsAuthenticated ? await UserManager.GetUserAsync(User) : new BlogUser();
}

@{
  ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Category</h4>
<hr/>
<div class="row">
  <div class="col-md-4">
    <form asp-action="Create">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control"/>
        <span asp-validation-for="Description" class="text-danger"></span>
      </div>
      <div class="form-group">
        <label asp-for="ImageFile" class="control-label">Blog Post Image</label>
        <img class="img-fluid border rounded-3 m-2" style="max-height: 250px;"
             src="@ImageService.ConvertByteArrayToFile(blogUser?.ImageData, blogUser?.ImageType, (int)DefaultImage.BlogPostImage)" id="blogImage">
        <input asp-for="ImageFile" type="file" class="form-control mt-3 pt-2" accept=".png,.jpg,.jpeg,.gif"
               onchange="document.getElementById('blogImage').src = window.URL.createObjectURL(this.files[0])"/>
      </div>
      <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary"/>
      </div>
    </form>
  </div>
</div>

<div>
  <a asp-action="Index">Back to List</a>
</div>

@section Scripts 
{
  @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}